

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Oct 20 09:03:32 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F45K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
     9                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    12   000000                     
    13                           ; Version 2.35
    14                           ; Generated 05/05/2021 GMT
    15                           ; 
    16                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC18F45K40 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48   000000                     _ANSELA	set	3857
    49   000000                     _LATD	set	3974
    50   000000                     _TRISC	set	3978
    51   000000                     _TRISD	set	3979
    52   000000                     _TRISA	set	3976
    53   000000                     _ADCON0	set	3936
    54   000000                     _ADRESL	set	3939
    55   000000                     _ADRESH	set	3940
    56   000000                     _LATC	set	3973
    57                           
    58                           ; #config settings
    59                           
    60                           	psect	cinit
    61   007EDE                     __pcinit:
    62                           	callstack 0
    63   007EDE                     start_initialization:
    64                           	callstack 0
    65   007EDE                     __initialization:
    66                           	callstack 0
    67   007EDE                     end_of_initialization:
    68                           	callstack 0
    69   007EDE                     __end_of__initialization:
    70                           	callstack 0
    71   007EDE  0100               	movlb	0
    72   007EE0  EF72  F03F         	goto	_main	;jump to C main() function
    73                           
    74                           	psect	cstackCOMRAM
    75   000001                     __pcstackCOMRAM:
    76                           	callstack 0
    77   000001                     ??_main:
    78                           
    79                           ; 1 bytes @ 0x0
    80   000001                     	ds	2
    81   000003                     main@result:
    82                           	callstack 0
    83                           
    84                           ; 2 bytes @ 0x2
    85   000003                     	ds	2
    86                           
    87 ;;
    88 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
    89 ;;
    90 ;; *************** function _main *****************
    91 ;; Defined at:
    92 ;;		line 105 in file "main.c"
    93 ;; Parameters:    Size  Location     Type
    94 ;;		None
    95 ;; Auto vars:     Size  Location     Type
    96 ;;  result          2    2[COMRAM] unsigned short 
    97 ;; Return value:  Size  Location     Type
    98 ;;                  1    wreg      void 
    99 ;; Registers used:
   100 ;;		wreg, status,2, status,0
   101 ;; Tracked objects:
   102 ;;		On entry : 0/0
   103 ;;		On exit  : 0/0
   104 ;;		Unchanged: 0/0
   105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   106 ;;      Params:         0       0       0       0       0       0       0       0       0
   107 ;;      Locals:         2       0       0       0       0       0       0       0       0
   108 ;;      Temps:          2       0       0       0       0       0       0       0       0
   109 ;;      Totals:         4       0       0       0       0       0       0       0       0
   110 ;;Total ram usage:        4 bytes
   111 ;; This function calls:
   112 ;;		Nothing
   113 ;; This function is called by:
   114 ;;		Startup code after reset
   115 ;; This function uses a non-reentrant model
   116 ;;
   117                           
   118                           	psect	text0
   119   007EE4                     __ptext0:
   120                           	callstack 0
   121   007EE4                     _main:
   122                           	callstack 31
   123   007EE4                     
   124                           ;main.c: 106:     TRISC = 0;
   125   007EE4  0E00               	movlw	0
   126   007EE6  6E8A               	movwf	138,c	;volatile
   127                           
   128                           ;main.c: 107:     TRISD = 0;
   129   007EE8  0E00               	movlw	0
   130   007EEA  6E8B               	movwf	139,c	;volatile
   131                           
   132                           ;main.c: 108:     LATD = 0;
   133   007EEC  0E00               	movlw	0
   134   007EEE  6E86               	movwf	134,c	;volatile
   135                           
   136                           ;main.c: 109:     TRISA = 0b00000001;
   137   007EF0  0E01               	movlw	1
   138   007EF2  6E88               	movwf	136,c	;volatile
   139                           
   140                           ;main.c: 110:     ANSELA = 0b00000001;
   141   007EF4  0E01               	movlw	1
   142   007EF6  010F               	movlb	15	; () banked
   143   007EF8  6F11               	movwf	17,b	;volatile
   144   007EFA                     
   145                           ; BSR set to: 15
   146                           ;main.c: 111:     ADCON0 |= 0x40;
   147   007EFA  8C60               	bsf	96,6,c	;volatile
   148   007EFC                     
   149                           ; BSR set to: 15
   150                           ;main.c: 112:     ADCON0 |= 0x04;
   151   007EFC  8460               	bsf	96,2,c	;volatile
   152   007EFE                     
   153                           ; BSR set to: 15
   154                           ;main.c: 113:     ADCON0 |= 0x80;
   155   007EFE  8E60               	bsf	96,7,c	;volatile
   156   007F00                     
   157                           ; BSR set to: 15
   158                           ;main.c: 114:     ADCON0 |= 0x01;
   159   007F00  8060               	bsf	96,0,c	;volatile
   160                           
   161                           ;main.c: 115:     uint16_t result = 0;
   162   007F02  0E00               	movlw	0
   163   007F04  6E04               	movwf	(main@result+1)^0,c
   164   007F06  0E00               	movlw	0
   165   007F08  6E03               	movwf	main@result^0,c
   166   007F0A                     l728:
   167                           
   168                           ;main.c: 118:         result |= (ADRESH << 8);
   169   007F0A  5064               	movf	100,w,c	;volatile
   170   007F0C  6E02               	movwf	(??_main+1)^0,c
   171   007F0E  6A01               	clrf	??_main^0,c
   172   007F10  5001               	movf	??_main^0,w,c
   173   007F12  1203               	iorwf	main@result^0,f,c
   174   007F14  5002               	movf	(??_main+1)^0,w,c
   175   007F16  1204               	iorwf	(main@result+1)^0,f,c
   176   007F18                     
   177                           ;main.c: 119:         result |= ADRESL;
   178   007F18  5063               	movf	99,w,c	;volatile
   179   007F1A  1203               	iorwf	main@result^0,f,c
   180   007F1C                     
   181                           ;main.c: 121:         if (result > 1000){
   182   007F1C  0EE9               	movlw	233
   183   007F1E  5C03               	subwf	main@result^0,w,c
   184   007F20  0E03               	movlw	3
   185   007F22  5804               	subwfb	(main@result+1)^0,w,c
   186   007F24  A0D8               	btfss	status,0,c
   187   007F26  EF97  F03F         	goto	u11
   188   007F2A  EF99  F03F         	goto	u10
   189   007F2E                     u11:
   190   007F2E  EF9C  F03F         	goto	l736
   191   007F32                     u10:
   192   007F32                     
   193                           ;main.c: 122:             LATC = 0xff;
   194   007F32  6885               	setf	133,c	;volatile
   195                           
   196                           ;main.c: 123:         }
   197   007F34  EFF8  F03F         	goto	l25
   198   007F38                     l736:
   199   007F38  0E85               	movlw	133
   200   007F3A  5C03               	subwf	main@result^0,w,c
   201   007F3C  0E03               	movlw	3
   202   007F3E  5804               	subwfb	(main@result+1)^0,w,c
   203   007F40  A0D8               	btfss	status,0,c
   204   007F42  EFA5  F03F         	goto	u21
   205   007F46  EFA7  F03F         	goto	u20
   206   007F4A                     u21:
   207   007F4A  EFAB  F03F         	goto	l740
   208   007F4E                     u20:
   209   007F4E                     
   210                           ;main.c: 125:             LATC = 0x7f;
   211   007F4E  0E7F               	movlw	127
   212   007F50  6E85               	movwf	133,c	;volatile
   213                           
   214                           ;main.c: 126:         }
   215   007F52  EFF8  F03F         	goto	l25
   216   007F56                     l740:
   217   007F56  0E21               	movlw	33
   218   007F58  5C03               	subwf	main@result^0,w,c
   219   007F5A  0E03               	movlw	3
   220   007F5C  5804               	subwfb	(main@result+1)^0,w,c
   221   007F5E  A0D8               	btfss	status,0,c
   222   007F60  EFB4  F03F         	goto	u31
   223   007F64  EFB6  F03F         	goto	u30
   224   007F68                     u31:
   225   007F68  EFBA  F03F         	goto	l744
   226   007F6C                     u30:
   227   007F6C                     
   228                           ;main.c: 128:             LATC = 0x3f;
   229   007F6C  0E3F               	movlw	63
   230   007F6E  6E85               	movwf	133,c	;volatile
   231                           
   232                           ;main.c: 129:         }
   233   007F70  EFF8  F03F         	goto	l25
   234   007F74                     l744:
   235   007F74  0EBD               	movlw	189
   236   007F76  5C03               	subwf	main@result^0,w,c
   237   007F78  0E02               	movlw	2
   238   007F7A  5804               	subwfb	(main@result+1)^0,w,c
   239   007F7C  A0D8               	btfss	status,0,c
   240   007F7E  EFC3  F03F         	goto	u41
   241   007F82  EFC5  F03F         	goto	u40
   242   007F86                     u41:
   243   007F86  EFC9  F03F         	goto	l748
   244   007F8A                     u40:
   245   007F8A                     
   246                           ;main.c: 131:             LATC = 0x1f;
   247   007F8A  0E1F               	movlw	31
   248   007F8C  6E85               	movwf	133,c	;volatile
   249                           
   250                           ;main.c: 132:         }
   251   007F8E  EFF8  F03F         	goto	l25
   252   007F92                     l748:
   253   007F92  0E59               	movlw	89
   254   007F94  5C03               	subwf	main@result^0,w,c
   255   007F96  0E02               	movlw	2
   256   007F98  5804               	subwfb	(main@result+1)^0,w,c
   257   007F9A  A0D8               	btfss	status,0,c
   258   007F9C  EFD2  F03F         	goto	u51
   259   007FA0  EFD4  F03F         	goto	u50
   260   007FA4                     u51:
   261   007FA4  EFD8  F03F         	goto	l752
   262   007FA8                     u50:
   263   007FA8                     
   264                           ;main.c: 134:             LATC = 0x0f;
   265   007FA8  0E0F               	movlw	15
   266   007FAA  6E85               	movwf	133,c	;volatile
   267                           
   268                           ;main.c: 135:         }
   269   007FAC  EFF8  F03F         	goto	l25
   270   007FB0                     l752:
   271   007FB0  0EF5               	movlw	245
   272   007FB2  5C03               	subwf	main@result^0,w,c
   273   007FB4  0E01               	movlw	1
   274   007FB6  5804               	subwfb	(main@result+1)^0,w,c
   275   007FB8  A0D8               	btfss	status,0,c
   276   007FBA  EFE1  F03F         	goto	u61
   277   007FBE  EFE3  F03F         	goto	u60
   278   007FC2                     u61:
   279   007FC2  EFE7  F03F         	goto	l756
   280   007FC6                     u60:
   281   007FC6                     
   282                           ;main.c: 137:             LATC = 0x07;
   283   007FC6  0E07               	movlw	7
   284   007FC8  6E85               	movwf	133,c	;volatile
   285                           
   286                           ;main.c: 138:         }
   287   007FCA  EFF8  F03F         	goto	l25
   288   007FCE                     l756:
   289   007FCE  0E91               	movlw	145
   290   007FD0  5C03               	subwf	main@result^0,w,c
   291   007FD2  0E01               	movlw	1
   292   007FD4  5804               	subwfb	(main@result+1)^0,w,c
   293   007FD6  A0D8               	btfss	status,0,c
   294   007FD8  EFF0  F03F         	goto	u71
   295   007FDC  EFF2  F03F         	goto	u70
   296   007FE0                     u71:
   297   007FE0  EFF6  F03F         	goto	l760
   298   007FE4                     u70:
   299   007FE4                     
   300                           ;main.c: 140:             LATC = 0x03;
   301   007FE4  0E03               	movlw	3
   302   007FE6  6E85               	movwf	133,c	;volatile
   303                           
   304                           ;main.c: 141:         }
   305   007FE8  EFF8  F03F         	goto	l25
   306   007FEC                     l760:
   307   007FEC                     
   308                           ;main.c: 143:             LATC = 0x01;
   309   007FEC  0E01               	movlw	1
   310   007FEE  6E85               	movwf	133,c	;volatile
   311   007FF0                     l25:
   312                           
   313                           ;main.c: 148:         result = 0;
   314   007FF0  0E00               	movlw	0
   315   007FF2  6E04               	movwf	(main@result+1)^0,c
   316   007FF4  0E00               	movlw	0
   317   007FF6  6E03               	movwf	main@result^0,c
   318   007FF8  EF85  F03F         	goto	l728
   319   007FFC  EF00  F000         	goto	start
   320   008000                     __end_of_main:
   321                           	callstack 0
   322   000000                     
   323                           	psect	rparam
   324   000000                     
   325                           	psect	idloc
   326                           
   327                           ;Config register IDLOC0 @ 0x200000
   328                           ;	unspecified, using default values
   329   200000                     	org	2097152
   330   200000  0FFF               	dw	4095
   331                           
   332                           ;Config register IDLOC1 @ 0x200002
   333                           ;	unspecified, using default values
   334   200002                     	org	2097154
   335   200002  0FFF               	dw	4095
   336                           
   337                           ;Config register IDLOC2 @ 0x200004
   338                           ;	unspecified, using default values
   339   200004                     	org	2097156
   340   200004  0FFF               	dw	4095
   341                           
   342                           ;Config register IDLOC3 @ 0x200006
   343                           ;	unspecified, using default values
   344   200006                     	org	2097158
   345   200006  0FFF               	dw	4095
   346                           
   347                           ;Config register IDLOC4 @ 0x200008
   348                           ;	unspecified, using default values
   349   200008                     	org	2097160
   350   200008  0FFF               	dw	4095
   351                           
   352                           ;Config register IDLOC5 @ 0x20000A
   353                           ;	unspecified, using default values
   354   20000A                     	org	2097162
   355   20000A  0FFF               	dw	4095
   356                           
   357                           ;Config register IDLOC6 @ 0x20000C
   358                           ;	unspecified, using default values
   359   20000C                     	org	2097164
   360   20000C  0FFF               	dw	4095
   361                           
   362                           ;Config register IDLOC7 @ 0x20000E
   363                           ;	unspecified, using default values
   364   20000E                     	org	2097166
   365   20000E  0FFF               	dw	4095
   366                           
   367                           	psect	config
   368                           
   369                           ;Config register CONFIG1L @ 0x300000
   370                           ;	External Oscillator mode Selection bits
   371                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
   372                           ;	Power-up default value for COSC bits
   373                           ;	RSTOSC = HFINTOSC_1MHZ, HFINTOSC with HFFRQ = 4 MHz and CDIV = 4:1
   374   300000                     	org	3145728
   375   300000  EA                 	db	234
   376                           
   377                           ;Config register CONFIG1H @ 0x300001
   378                           ;	Clock Out Enable bit
   379                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
   380                           ;	Clock Switch Enable bit
   381                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
   382                           ;	Fail-Safe Clock Monitor Enable bit
   383                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
   384   300001                     	org	3145729
   385   300001  FF                 	db	255
   386                           
   387                           ;Config register CONFIG2L @ 0x300002
   388                           ;	Master Clear Enable bit
   389                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
   390                           ;	Power-up Timer Enable bit
   391                           ;	PWRTE = OFF, Power up timer disabled
   392                           ;	Low-power BOR enable bit
   393                           ;	LPBOREN = OFF, ULPBOR disabled
   394                           ;	Brown-out Reset Enable bits
   395                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
   396   300002                     	org	3145730
   397   300002  FF                 	db	255
   398                           
   399                           ;Config register CONFIG2H @ 0x300003
   400                           ;	Brown Out Reset Voltage selection bits
   401                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
   402                           ;	ZCD Disable bit
   403                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
   404                           ;	PPSLOCK bit One-Way Set Enable bit
   405                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
   406                           ;	Stack Full/Underflow Reset Enable bit
   407                           ;	STVREN = ON, Stack full/underflow will cause Reset
   408                           ;	Debugger Enable bit
   409                           ;	DEBUG = OFF, Background debugger disabled
   410                           ;	Extended Instruction Set Enable bit
   411                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
   412   300003                     	org	3145731
   413   300003  FF                 	db	255
   414                           
   415                           ;Config register CONFIG3L @ 0x300004
   416                           ;	WDT Period Select bits
   417                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
   418                           ;	WDT operating mode
   419                           ;	WDTE = OFF, WDT Disabled
   420   300004                     	org	3145732
   421   300004  9F                 	db	159
   422                           
   423                           ;Config register CONFIG3H @ 0x300005
   424                           ;	WDT Window Select bits
   425                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
   426                           ;	WDT input clock selector
   427                           ;	WDTCCS = SC, Software Control
   428   300005                     	org	3145733
   429   300005  FF                 	db	255
   430                           
   431                           ;Config register CONFIG4L @ 0x300006
   432                           ;	Write Protection Block 0
   433                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
   434                           ;	Write Protection Block 1
   435                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
   436                           ;	Write Protection Block 2
   437                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
   438                           ;	Write Protection Block 3
   439                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
   440   300006                     	org	3145734
   441   300006  FF                 	db	255
   442                           
   443                           ;Config register CONFIG4H @ 0x300007
   444                           ;	Configuration Register Write Protection bit
   445                           ;	WRTC = OFF, Configuration registers (300000-30000Bh) not write-protected
   446                           ;	Boot Block Write Protection bit
   447                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
   448                           ;	Data EEPROM Write Protection bit
   449                           ;	WRTD = OFF, Data EEPROM not write-protected
   450                           ;	Scanner Enable bit
   451                           ;	SCANE = ON, Scanner module is available for use, SCANMD bit can control the module
   452                           ;	Low Voltage Programming Enable bit
   453                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
   454   300007                     	org	3145735
   455   300007  FF                 	db	255
   456                           
   457                           ;Config register CONFIG5L @ 0x300008
   458                           ;	UserNVM Program Memory Code Protection bit
   459                           ;	CP = OFF, UserNVM code protection disabled
   460                           ;	DataNVM Memory Code Protection bit
   461                           ;	CPD = OFF, DataNVM code protection disabled
   462   300008                     	org	3145736
   463   300008  FF                 	db	255
   464                           
   465                           ;Config register CONFIG5H @ 0x300009
   466                           ;	unspecified, using default values
   467   300009                     	org	3145737
   468   300009  FF                 	db	255
   469                           
   470                           ;Config register CONFIG6L @ 0x30000A
   471                           ;	Table Read Protection Block 0
   472                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
   473                           ;	Table Read Protection Block 1
   474                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
   475                           ;	Table Read Protection Block 2
   476                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
   477                           ;	Table Read Protection Block 3
   478                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
   479   30000A                     	org	3145738
   480   30000A  FF                 	db	255
   481                           
   482                           ;Config register CONFIG6H @ 0x30000B
   483                           ;	Boot Block Table Read Protection bit
   484                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
   485   30000B                     	org	3145739
   486   30000B  FF                 	db	255
   487                           tosu	equ	0xFFF
   488                           tosh	equ	0xFFE
   489                           tosl	equ	0xFFD
   490                           stkptr	equ	0xFFC
   491                           pclatu	equ	0xFFB
   492                           pclath	equ	0xFFA
   493                           pcl	equ	0xFF9
   494                           tblptru	equ	0xFF8
   495                           tblptrh	equ	0xFF7
   496                           tblptrl	equ	0xFF6
   497                           tablat	equ	0xFF5
   498                           prodh	equ	0xFF4
   499                           prodl	equ	0xFF3
   500                           indf0	equ	0xFEF
   501                           postinc0	equ	0xFEE
   502                           postdec0	equ	0xFED
   503                           preinc0	equ	0xFEC
   504                           plusw0	equ	0xFEB
   505                           fsr0h	equ	0xFEA
   506                           fsr0l	equ	0xFE9
   507                           wreg	equ	0xFE8
   508                           indf1	equ	0xFE7
   509                           postinc1	equ	0xFE6
   510                           postdec1	equ	0xFE5
   511                           preinc1	equ	0xFE4
   512                           plusw1	equ	0xFE3
   513                           fsr1h	equ	0xFE2
   514                           fsr1l	equ	0xFE1
   515                           bsr	equ	0xFE0
   516                           indf2	equ	0xFDF
   517                           postinc2	equ	0xFDE
   518                           postdec2	equ	0xFDD
   519                           preinc2	equ	0xFDC
   520                           plusw2	equ	0xFDB
   521                           fsr2h	equ	0xFDA
   522                           fsr2l	equ	0xFD9
   523                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      4       4
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0     120
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      4       4       1        4.2%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBIGSFRh          74      0       0      20        0.0%
BITBIGSFRlhh         1      0       0      21        0.0%
BITBIGSFRlhl         1      0       0      22        0.0%
BITBIGSFRllhhh      20      0       0      23        0.0%
BITBIGSFRllhhl       2      0       0      24        0.0%
BITBIGSFRllhl       4E      0       0      25        0.0%
BITBIGSFRlll        84      0       0      26        0.0%
ABS                  0      0       0      27        0.0%
BIGRAM             7FF      0       0      28        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Oct 20 09:03:32 2022

                     l25 7FF0                       u10 7F32                       u11 7F2E  
                     u20 7F4E                       u21 7F4A                       u30 7F6C  
                     u31 7F68                       u40 7F8A                       u41 7F86  
                     u50 7FA8                       u51 7FA4                       u60 7FC6  
                     u61 7FC2                       u70 7FE4                       u71 7FE0  
                    l720 7EFA                      l730 7F18                      l722 7EFC  
                    l740 7F56                      l732 7F1C                      l724 7EFE  
                    l750 7FA8                      l742 7F6C                      l734 7F32  
                    l726 7F00                      l718 7EE4                      l760 7FEC  
                    l752 7FB0                      l744 7F74                      l736 7F38  
                    l728 7F0A                      l762 7FEC                      l754 7FC6  
                    l746 7F8A                      l738 7F4E                      l756 7FCE  
                    l748 7F92                      l758 7FE4                     _LATC 000F85  
                   _LATD 000F86                     _main 7EE4                     start 0000  
           ___param_bank 000000                    ?_main 0001                    _TRISA 000F88  
                  _TRISC 000F8A                    _TRISD 000F8B                    status 000FD8  
        __initialization 7EDE             __end_of_main 8000                   ??_main 0001  
          __activetblptr 000000                   _ADCON0 000F60                   _ADRESH 000F64  
                 _ADRESL 000F63                   _ANSELA 000F11                   isa$std 000001  
             __accesstop 0060  __end_of__initialization 7EDE            ___rparam_used 000001  
         __pcstackCOMRAM 0001                  __Hparam 0000                  __Lparam 0000  
                __pcinit 7EDE                  __ramtop 0800                  __ptext0 7EE4  
   end_of_initialization 7EDE               main@result 0003      start_initialization 7EDE  
               __Hrparam 0000                 __Lrparam 0000                 isa$xinst 000000  
